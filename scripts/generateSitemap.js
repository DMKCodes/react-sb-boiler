/* eslint-disable no-console */
const fs = require("fs");
const path = require("path");
const { siteUrl, routes, meta = {}, exclude = [], trailingSlash = false } = require("./sitemap.config");

// maintain absolute canonical url
const canonical = (p) => {
    let clean = p || "/";
    if (clean !== "/" && trailingSlash) clean = clean.replace(/\/?$/, "/");
    if (clean !== "/" && !trailingSlash) clean = clean.replace(/\/$/, "");
    return `${siteUrl}${clean}`
};

const todayISO = new Date().toISOString().split("T")[0]; // YYYY-MM-DD

const unique = Array.from(
    new Set(routes.filter(Boolean).filter((r) => !exclude.includes(r)))
).sort();

const urlset = unique.map((p) => {
    const m = meta[p] || {};
    const changefreq = m.changefreq || "monthly";
    const priority = (typeof m.priority === "number" ? m.priority : 0.7).toFixed(1);
    return `
        <url>
            <loc>${escapeXml(canonical(p))}</loc>
            <lastmod>${todayISO}</lastmod>
            <changefreq>${changefreq}</changefreq>
            <priority>${priority}</priority>
        </url>`;
}).join("");

const xml = `
    <?xml version="1.0" encoding="UTF-8"?>
    <!-- Generated by scripts/generate-sitemap.js -->
    <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
        ${urlset}
    </urlset>
`;

const txt = unique.map((p) => canonical(p)).join("\n") + "\n";

const outDir = path.resolve(process.cwd(), "public");
const xmlPath = path.join(outDir, "sitemap.xml");
const txtPath = path.join(outDir, "sitemap.txt");

fs.mkdirSync(outDir, { recursive: true });
fs.writeFileSync(xmlPath, xml.trim() + "\n", "utf8");
fs.writeFileSync(txtPath, txt, "utf8");

console.log(`✓ Wrote ${path.relative(process.cwd(), xmlPath)} (${unique.length} URLs)`);
console.log(`✓ Wrote ${path.relative(process.cwd(), txtPath)}`);

function escapeXml(str) {
    return String(str)
        .replace(/&/g, "&amp;")
        .replace(/"/g, "&quot;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;");
};